# Generated by Django 5.2 on 2025-05-20 05:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(db_index=True, max_length=15, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='roles',
            fields=[
                ('role_id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('Admin', 'Admin'), ('Technician', 'Technician'), ('Customer', 'Customer')], default='Technician', max_length=10)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='customers',
            fields=[
                ('customer_id', models.UUIDField(primary_key=True, serialize=False)),
                ('profile_picture_url', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('subscription_plan', models.CharField(max_length=100)),
                ('total_bookings', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='notifications',
            fields=[
                ('notification_id', models.UUIDField(primary_key=True, serialize=False)),
                ('message', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('Read', 'Read'), ('UnRead', 'UnRead')], default='UnRead', max_length=10)),
                ('created_at', models.TimeField(auto_now_add=True)),
                ('recipient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='password_resets',
            fields=[
                ('reset_id', models.UUIDField(primary_key=True, serialize=False)),
                ('reset_token', models.CharField(max_length=200)),
                ('expires_at', models.TimeField()),
                ('used', models.BooleanField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'password_resets',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.roles')),
            ],
            options={
                'db_table': 'role_permission',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='homelight_users.roles'),
        ),
        migrations.CreateModel(
            name='technicians',
            fields=[
                ('technician_id', models.UUIDField(primary_key=True, serialize=False)),
                ('profile_picture_url', models.CharField(max_length=500)),
                ('name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=100)),
                ('main_specialty', models.CharField(max_length=100)),
                ('years_of_experience', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'technicians',
            },
        ),
        migrations.CreateModel(
            name='user_activity_logs',
            fields=[
                ('log_id', models.UUIDField(primary_key=True, serialize=False)),
                ('action', models.TextField()),
                ('timestamp', models.TimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_activity_logs',
            },
        ),
    ]
