# Generated by Django 5.2 on 2025-06-11 08:24

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('homelight_appointment', '0003_remove_customer_requests_issue_id_and_more'),
        ('homelight_users', '0011_alter_customers_profile_picture_url_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='request_history',
            fields=[
                ('created_at', models.TimeField(auto_created=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_status', models.CharField(choices=[('Pending', 'Pending'), ('Resolved', 'Resolved'), ('Dismissed', 'Dismissed'), ('In Progress', 'In Progress')], default='Pending', max_length=15)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('customer_feedback', models.CharField(max_length=300)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('request_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_appointment.customer_requests')),
            ],
            options={
                'db_table': 'request_history',
            },
        ),
        migrations.CreateModel(
            name='service_gallery',
            fields=[
                ('gallery_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gallery_url', models.ImageField(blank=True, null=True, upload_to='gallery/')),
                ('issue_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_appointment.issue_type')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.roles')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'service_gallery',
            },
        ),
        migrations.CreateModel(
            name='technician_availability',
            fields=[
                ('availability_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_of_week', models.CharField(choices=[('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], default='mon', max_length=3)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_availability',
            },
        ),
        migrations.CreateModel(
            name='technician_complaints',
            fields=[
                ('complaint_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('complaint_text', models.TextField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Resolved', 'Resolved'), ('Dismissed', 'Dismissed')], default='Pending', max_length=10)),
                ('reported_at', models.TimeField()),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.customers')),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_complaints',
            },
        ),
        migrations.CreateModel(
            name='technician_feedback',
            fields=[
                ('feedback_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback_text', models.TextField()),
                ('created_at', models.TimeField()),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.customers')),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_feedback',
            },
        ),
        migrations.CreateModel(
            name='technician_performance',
            fields=[
                ('performance_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating_avg', models.FloatField()),
                ('total_appointments', models.IntegerField()),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_performance',
            },
        ),
        migrations.CreateModel(
            name='technician_service_area',
            fields=[
                ('area_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('postal_code', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=30)),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_service_area',
            },
        ),
        migrations.CreateModel(
            name='technician_specialization',
            fields=[
                ('specialization_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tools_owned', models.TextField()),
                ('specialization_details', models.TextField()),
                ('years_of_experience', models.IntegerField()),
                ('base_price', models.IntegerField()),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_appointment.issue_type')),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_specialization',
            },
        ),
        migrations.CreateModel(
            name='technician_workload',
            fields=[
                ('workload_id', models.UUIDField(primary_key=True, serialize=False)),
                ('total_jobs', models.IntegerField()),
                ('total_hours_worked', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('last_updated', models.TimeField()),
                ('technician_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homelight_users.technicians')),
            ],
            options={
                'db_table': 'technician_workload',
            },
        ),
    ]
